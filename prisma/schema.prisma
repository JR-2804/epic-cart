generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  phone         String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  address       Address   @relation(fields: [addressId], references: [id])
  addressId     String
  orders        Order[]
}

model Address {
  id     String @id @default(cuid())
  street String
  city   String
  state  String
  zip    String
  User   User[]
}

model Order {
  id       String         @id @default(cuid())
  subtotal Float
  taxes    Float
  total    Float
  User     User?          @relation(fields: [userId], references: [id])
  userId   String?
  products OrderProduct[]
}

model OrderProduct {
  id        String  @id @default(cuid())
  quantity  Int
  Order     Order?  @relation(fields: [orderId], references: [id])
  orderId   String?
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model Product {
  id           String         @id @default(cuid())
  name         String
  price        Float
  OrderProduct OrderProduct[]
}
